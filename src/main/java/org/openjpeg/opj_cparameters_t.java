// Generated by jextract

package org.openjpeg;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * typedef struct opj_cparameters {
 *     OPJ_BOOL tile_size_on;
 *     int cp_tx0;
 *     int cp_ty0;
 *     int cp_tdx;
 *     int cp_tdy;
 *     int cp_disto_alloc;
 *     int cp_fixed_alloc;
 *     int cp_fixed_quality;
 *     int *cp_matrice;
 *     char *cp_comment;
 *     int csty;
 *     OPJ_PROG_ORDER prog_order;
 *     opj_poc_t POC[32];
 *     OPJ_UINT32 numpocs;
 *     int tcp_numlayers;
 *     float tcp_rates[100];
 *     float tcp_distoratio[100];
 *     int numresolution;
 *     int cblockw_init;
 *     int cblockh_init;
 *     int mode;
 *     int irreversible;
 *     int roi_compno;
 *     int roi_shift;
 *     int res_spec;
 *     int prcw_init[33];
 *     int prch_init[33];
 *     char infile[4096];
 *     char outfile[4096];
 *     int index_on;
 *     char index[4096];
 *     int image_offset_x0;
 *     int image_offset_y0;
 *     int subsampling_dx;
 *     int subsampling_dy;
 *     int decod_format;
 *     int cod_format;
 *     OPJ_BOOL jpwl_epc_on;
 *     int jpwl_hprot_MH;
 *     int jpwl_hprot_TPH_tileno[16];
 *     int jpwl_hprot_TPH[16];
 *     int jpwl_pprot_tileno[16];
 *     int jpwl_pprot_packno[16];
 *     int jpwl_pprot[16];
 *     int jpwl_sens_size;
 *     int jpwl_sens_addr;
 *     int jpwl_sens_range;
 *     int jpwl_sens_MH;
 *     int jpwl_sens_TPH_tileno[16];
 *     int jpwl_sens_TPH[16];
 *     OPJ_CINEMA_MODE cp_cinema;
 *     int max_comp_size;
 *     OPJ_RSIZ_CAPABILITIES cp_rsiz;
 *     char tp_on;
 *     char tp_flag;
 *     char tcp_mct;
 *     OPJ_BOOL jpip_on;
 *     void *mct_data;
 *     int max_cs_size;
 *     OPJ_UINT16 rsiz;
 * } opj_cparameters_t
 * }
 */
public class opj_cparameters_t extends opj_cparameters {

    opj_cparameters_t() {
        // Should not be called directly
    }
}

