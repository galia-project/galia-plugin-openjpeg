// Generated by jextract

package org.openjpeg;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct opj_poc {
 *     OPJ_UINT32 resno0;
 *     OPJ_UINT32 compno0;
 *     OPJ_UINT32 layno1;
 *     OPJ_UINT32 resno1;
 *     OPJ_UINT32 compno1;
 *     OPJ_UINT32 layno0;
 *     OPJ_UINT32 precno0;
 *     OPJ_UINT32 precno1;
 *     OPJ_PROG_ORDER prg1;
 *     OPJ_PROG_ORDER prg;
 *     OPJ_CHAR progorder[5];
 *     OPJ_UINT32 tile;
 *     OPJ_INT32 tx0;
 *     OPJ_INT32 tx1;
 *     OPJ_INT32 ty0;
 *     OPJ_INT32 ty1;
 *     OPJ_UINT32 layS;
 *     OPJ_UINT32 resS;
 *     OPJ_UINT32 compS;
 *     OPJ_UINT32 prcS;
 *     OPJ_UINT32 layE;
 *     OPJ_UINT32 resE;
 *     OPJ_UINT32 compE;
 *     OPJ_UINT32 prcE;
 *     OPJ_UINT32 txS;
 *     OPJ_UINT32 txE;
 *     OPJ_UINT32 tyS;
 *     OPJ_UINT32 tyE;
 *     OPJ_UINT32 dx;
 *     OPJ_UINT32 dy;
 *     OPJ_UINT32 lay_t;
 *     OPJ_UINT32 res_t;
 *     OPJ_UINT32 comp_t;
 *     OPJ_UINT32 prc_t;
 *     OPJ_UINT32 tx0_t;
 *     OPJ_UINT32 ty0_t;
 * }
 * }
 */
public class opj_poc {

    opj_poc() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        openjpeg_h.C_INT.withName("resno0"),
        openjpeg_h.C_INT.withName("compno0"),
        openjpeg_h.C_INT.withName("layno1"),
        openjpeg_h.C_INT.withName("resno1"),
        openjpeg_h.C_INT.withName("compno1"),
        openjpeg_h.C_INT.withName("layno0"),
        openjpeg_h.C_INT.withName("precno0"),
        openjpeg_h.C_INT.withName("precno1"),
        openjpeg_h.C_INT.withName("prg1"),
        openjpeg_h.C_INT.withName("prg"),
        MemoryLayout.sequenceLayout(5, openjpeg_h.C_CHAR).withName("progorder"),
        MemoryLayout.paddingLayout(3),
        openjpeg_h.C_INT.withName("tile"),
        openjpeg_h.C_INT.withName("tx0"),
        openjpeg_h.C_INT.withName("tx1"),
        openjpeg_h.C_INT.withName("ty0"),
        openjpeg_h.C_INT.withName("ty1"),
        openjpeg_h.C_INT.withName("layS"),
        openjpeg_h.C_INT.withName("resS"),
        openjpeg_h.C_INT.withName("compS"),
        openjpeg_h.C_INT.withName("prcS"),
        openjpeg_h.C_INT.withName("layE"),
        openjpeg_h.C_INT.withName("resE"),
        openjpeg_h.C_INT.withName("compE"),
        openjpeg_h.C_INT.withName("prcE"),
        openjpeg_h.C_INT.withName("txS"),
        openjpeg_h.C_INT.withName("txE"),
        openjpeg_h.C_INT.withName("tyS"),
        openjpeg_h.C_INT.withName("tyE"),
        openjpeg_h.C_INT.withName("dx"),
        openjpeg_h.C_INT.withName("dy"),
        openjpeg_h.C_INT.withName("lay_t"),
        openjpeg_h.C_INT.withName("res_t"),
        openjpeg_h.C_INT.withName("comp_t"),
        openjpeg_h.C_INT.withName("prc_t"),
        openjpeg_h.C_INT.withName("tx0_t"),
        openjpeg_h.C_INT.withName("ty0_t")
    ).withName("opj_poc");

    /**
     * The layout of this struct
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfInt resno0$LAYOUT = (OfInt)$LAYOUT.select(groupElement("resno0"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resno0
     * }
     */
    public static final OfInt resno0$layout() {
        return resno0$LAYOUT;
    }

    private static final long resno0$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resno0
     * }
     */
    public static final long resno0$offset() {
        return resno0$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resno0
     * }
     */
    public static int resno0(MemorySegment struct) {
        return struct.get(resno0$LAYOUT, resno0$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resno0
     * }
     */
    public static void resno0(MemorySegment struct, int fieldValue) {
        struct.set(resno0$LAYOUT, resno0$OFFSET, fieldValue);
    }

    private static final OfInt compno0$LAYOUT = (OfInt)$LAYOUT.select(groupElement("compno0"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compno0
     * }
     */
    public static final OfInt compno0$layout() {
        return compno0$LAYOUT;
    }

    private static final long compno0$OFFSET = 4;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compno0
     * }
     */
    public static final long compno0$offset() {
        return compno0$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compno0
     * }
     */
    public static int compno0(MemorySegment struct) {
        return struct.get(compno0$LAYOUT, compno0$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compno0
     * }
     */
    public static void compno0(MemorySegment struct, int fieldValue) {
        struct.set(compno0$LAYOUT, compno0$OFFSET, fieldValue);
    }

    private static final OfInt layno1$LAYOUT = (OfInt)$LAYOUT.select(groupElement("layno1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layno1
     * }
     */
    public static final OfInt layno1$layout() {
        return layno1$LAYOUT;
    }

    private static final long layno1$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layno1
     * }
     */
    public static final long layno1$offset() {
        return layno1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layno1
     * }
     */
    public static int layno1(MemorySegment struct) {
        return struct.get(layno1$LAYOUT, layno1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layno1
     * }
     */
    public static void layno1(MemorySegment struct, int fieldValue) {
        struct.set(layno1$LAYOUT, layno1$OFFSET, fieldValue);
    }

    private static final OfInt resno1$LAYOUT = (OfInt)$LAYOUT.select(groupElement("resno1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resno1
     * }
     */
    public static final OfInt resno1$layout() {
        return resno1$LAYOUT;
    }

    private static final long resno1$OFFSET = 12;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resno1
     * }
     */
    public static final long resno1$offset() {
        return resno1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resno1
     * }
     */
    public static int resno1(MemorySegment struct) {
        return struct.get(resno1$LAYOUT, resno1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resno1
     * }
     */
    public static void resno1(MemorySegment struct, int fieldValue) {
        struct.set(resno1$LAYOUT, resno1$OFFSET, fieldValue);
    }

    private static final OfInt compno1$LAYOUT = (OfInt)$LAYOUT.select(groupElement("compno1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compno1
     * }
     */
    public static final OfInt compno1$layout() {
        return compno1$LAYOUT;
    }

    private static final long compno1$OFFSET = 16;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compno1
     * }
     */
    public static final long compno1$offset() {
        return compno1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compno1
     * }
     */
    public static int compno1(MemorySegment struct) {
        return struct.get(compno1$LAYOUT, compno1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compno1
     * }
     */
    public static void compno1(MemorySegment struct, int fieldValue) {
        struct.set(compno1$LAYOUT, compno1$OFFSET, fieldValue);
    }

    private static final OfInt layno0$LAYOUT = (OfInt)$LAYOUT.select(groupElement("layno0"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layno0
     * }
     */
    public static final OfInt layno0$layout() {
        return layno0$LAYOUT;
    }

    private static final long layno0$OFFSET = 20;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layno0
     * }
     */
    public static final long layno0$offset() {
        return layno0$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layno0
     * }
     */
    public static int layno0(MemorySegment struct) {
        return struct.get(layno0$LAYOUT, layno0$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layno0
     * }
     */
    public static void layno0(MemorySegment struct, int fieldValue) {
        struct.set(layno0$LAYOUT, layno0$OFFSET, fieldValue);
    }

    private static final OfInt precno0$LAYOUT = (OfInt)$LAYOUT.select(groupElement("precno0"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 precno0
     * }
     */
    public static final OfInt precno0$layout() {
        return precno0$LAYOUT;
    }

    private static final long precno0$OFFSET = 24;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 precno0
     * }
     */
    public static final long precno0$offset() {
        return precno0$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 precno0
     * }
     */
    public static int precno0(MemorySegment struct) {
        return struct.get(precno0$LAYOUT, precno0$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 precno0
     * }
     */
    public static void precno0(MemorySegment struct, int fieldValue) {
        struct.set(precno0$LAYOUT, precno0$OFFSET, fieldValue);
    }

    private static final OfInt precno1$LAYOUT = (OfInt)$LAYOUT.select(groupElement("precno1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 precno1
     * }
     */
    public static final OfInt precno1$layout() {
        return precno1$LAYOUT;
    }

    private static final long precno1$OFFSET = 28;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 precno1
     * }
     */
    public static final long precno1$offset() {
        return precno1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 precno1
     * }
     */
    public static int precno1(MemorySegment struct) {
        return struct.get(precno1$LAYOUT, precno1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 precno1
     * }
     */
    public static void precno1(MemorySegment struct, int fieldValue) {
        struct.set(precno1$LAYOUT, precno1$OFFSET, fieldValue);
    }

    private static final OfInt prg1$LAYOUT = (OfInt)$LAYOUT.select(groupElement("prg1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_PROG_ORDER prg1
     * }
     */
    public static final OfInt prg1$layout() {
        return prg1$LAYOUT;
    }

    private static final long prg1$OFFSET = 32;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_PROG_ORDER prg1
     * }
     */
    public static final long prg1$offset() {
        return prg1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_PROG_ORDER prg1
     * }
     */
    public static int prg1(MemorySegment struct) {
        return struct.get(prg1$LAYOUT, prg1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_PROG_ORDER prg1
     * }
     */
    public static void prg1(MemorySegment struct, int fieldValue) {
        struct.set(prg1$LAYOUT, prg1$OFFSET, fieldValue);
    }

    private static final OfInt prg$LAYOUT = (OfInt)$LAYOUT.select(groupElement("prg"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_PROG_ORDER prg
     * }
     */
    public static final OfInt prg$layout() {
        return prg$LAYOUT;
    }

    private static final long prg$OFFSET = 36;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_PROG_ORDER prg
     * }
     */
    public static final long prg$offset() {
        return prg$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_PROG_ORDER prg
     * }
     */
    public static int prg(MemorySegment struct) {
        return struct.get(prg$LAYOUT, prg$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_PROG_ORDER prg
     * }
     */
    public static void prg(MemorySegment struct, int fieldValue) {
        struct.set(prg$LAYOUT, prg$OFFSET, fieldValue);
    }

    private static final SequenceLayout progorder$LAYOUT = (SequenceLayout)$LAYOUT.select(groupElement("progorder"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_CHAR progorder[5]
     * }
     */
    public static final SequenceLayout progorder$layout() {
        return progorder$LAYOUT;
    }

    private static final long progorder$OFFSET = 40;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_CHAR progorder[5]
     * }
     */
    public static final long progorder$offset() {
        return progorder$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_CHAR progorder[5]
     * }
     */
    public static MemorySegment progorder(MemorySegment struct) {
        return struct.asSlice(progorder$OFFSET, progorder$LAYOUT.byteSize());
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_CHAR progorder[5]
     * }
     */
    public static void progorder(MemorySegment struct, MemorySegment fieldValue) {
        MemorySegment.copy(fieldValue, 0L, struct, progorder$OFFSET, progorder$LAYOUT.byteSize());
    }

    private static long[] progorder$DIMS = { 5 };

    /**
     * Dimensions for array field:
     * {@snippet lang=c :
     * OPJ_CHAR progorder[5]
     * }
     */
    public static long[] progorder$dimensions() {
        return progorder$DIMS;
    }
    private static final VarHandle progorder$ELEM_HANDLE = progorder$LAYOUT.varHandle(sequenceElement());

    /**
     * Indexed getter for field:
     * {@snippet lang=c :
     * OPJ_CHAR progorder[5]
     * }
     */
    public static byte progorder(MemorySegment struct, long index0) {
        return (byte)progorder$ELEM_HANDLE.get(struct, 0L, index0);
    }

    /**
     * Indexed setter for field:
     * {@snippet lang=c :
     * OPJ_CHAR progorder[5]
     * }
     */
    public static void progorder(MemorySegment struct, long index0, byte fieldValue) {
        progorder$ELEM_HANDLE.set(struct, 0L, index0, fieldValue);
    }

    private static final OfInt tile$LAYOUT = (OfInt)$LAYOUT.select(groupElement("tile"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tile
     * }
     */
    public static final OfInt tile$layout() {
        return tile$LAYOUT;
    }

    private static final long tile$OFFSET = 48;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tile
     * }
     */
    public static final long tile$offset() {
        return tile$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tile
     * }
     */
    public static int tile(MemorySegment struct) {
        return struct.get(tile$LAYOUT, tile$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tile
     * }
     */
    public static void tile(MemorySegment struct, int fieldValue) {
        struct.set(tile$LAYOUT, tile$OFFSET, fieldValue);
    }

    private static final OfInt tx0$LAYOUT = (OfInt)$LAYOUT.select(groupElement("tx0"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_INT32 tx0
     * }
     */
    public static final OfInt tx0$layout() {
        return tx0$LAYOUT;
    }

    private static final long tx0$OFFSET = 52;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_INT32 tx0
     * }
     */
    public static final long tx0$offset() {
        return tx0$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_INT32 tx0
     * }
     */
    public static int tx0(MemorySegment struct) {
        return struct.get(tx0$LAYOUT, tx0$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_INT32 tx0
     * }
     */
    public static void tx0(MemorySegment struct, int fieldValue) {
        struct.set(tx0$LAYOUT, tx0$OFFSET, fieldValue);
    }

    private static final OfInt tx1$LAYOUT = (OfInt)$LAYOUT.select(groupElement("tx1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_INT32 tx1
     * }
     */
    public static final OfInt tx1$layout() {
        return tx1$LAYOUT;
    }

    private static final long tx1$OFFSET = 56;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_INT32 tx1
     * }
     */
    public static final long tx1$offset() {
        return tx1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_INT32 tx1
     * }
     */
    public static int tx1(MemorySegment struct) {
        return struct.get(tx1$LAYOUT, tx1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_INT32 tx1
     * }
     */
    public static void tx1(MemorySegment struct, int fieldValue) {
        struct.set(tx1$LAYOUT, tx1$OFFSET, fieldValue);
    }

    private static final OfInt ty0$LAYOUT = (OfInt)$LAYOUT.select(groupElement("ty0"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_INT32 ty0
     * }
     */
    public static final OfInt ty0$layout() {
        return ty0$LAYOUT;
    }

    private static final long ty0$OFFSET = 60;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_INT32 ty0
     * }
     */
    public static final long ty0$offset() {
        return ty0$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_INT32 ty0
     * }
     */
    public static int ty0(MemorySegment struct) {
        return struct.get(ty0$LAYOUT, ty0$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_INT32 ty0
     * }
     */
    public static void ty0(MemorySegment struct, int fieldValue) {
        struct.set(ty0$LAYOUT, ty0$OFFSET, fieldValue);
    }

    private static final OfInt ty1$LAYOUT = (OfInt)$LAYOUT.select(groupElement("ty1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_INT32 ty1
     * }
     */
    public static final OfInt ty1$layout() {
        return ty1$LAYOUT;
    }

    private static final long ty1$OFFSET = 64;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_INT32 ty1
     * }
     */
    public static final long ty1$offset() {
        return ty1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_INT32 ty1
     * }
     */
    public static int ty1(MemorySegment struct) {
        return struct.get(ty1$LAYOUT, ty1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_INT32 ty1
     * }
     */
    public static void ty1(MemorySegment struct, int fieldValue) {
        struct.set(ty1$LAYOUT, ty1$OFFSET, fieldValue);
    }

    private static final OfInt layS$LAYOUT = (OfInt)$LAYOUT.select(groupElement("layS"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layS
     * }
     */
    public static final OfInt layS$layout() {
        return layS$LAYOUT;
    }

    private static final long layS$OFFSET = 68;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layS
     * }
     */
    public static final long layS$offset() {
        return layS$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layS
     * }
     */
    public static int layS(MemorySegment struct) {
        return struct.get(layS$LAYOUT, layS$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layS
     * }
     */
    public static void layS(MemorySegment struct, int fieldValue) {
        struct.set(layS$LAYOUT, layS$OFFSET, fieldValue);
    }

    private static final OfInt resS$LAYOUT = (OfInt)$LAYOUT.select(groupElement("resS"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resS
     * }
     */
    public static final OfInt resS$layout() {
        return resS$LAYOUT;
    }

    private static final long resS$OFFSET = 72;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resS
     * }
     */
    public static final long resS$offset() {
        return resS$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resS
     * }
     */
    public static int resS(MemorySegment struct) {
        return struct.get(resS$LAYOUT, resS$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resS
     * }
     */
    public static void resS(MemorySegment struct, int fieldValue) {
        struct.set(resS$LAYOUT, resS$OFFSET, fieldValue);
    }

    private static final OfInt compS$LAYOUT = (OfInt)$LAYOUT.select(groupElement("compS"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compS
     * }
     */
    public static final OfInt compS$layout() {
        return compS$LAYOUT;
    }

    private static final long compS$OFFSET = 76;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compS
     * }
     */
    public static final long compS$offset() {
        return compS$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compS
     * }
     */
    public static int compS(MemorySegment struct) {
        return struct.get(compS$LAYOUT, compS$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compS
     * }
     */
    public static void compS(MemorySegment struct, int fieldValue) {
        struct.set(compS$LAYOUT, compS$OFFSET, fieldValue);
    }

    private static final OfInt prcS$LAYOUT = (OfInt)$LAYOUT.select(groupElement("prcS"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prcS
     * }
     */
    public static final OfInt prcS$layout() {
        return prcS$LAYOUT;
    }

    private static final long prcS$OFFSET = 80;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prcS
     * }
     */
    public static final long prcS$offset() {
        return prcS$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prcS
     * }
     */
    public static int prcS(MemorySegment struct) {
        return struct.get(prcS$LAYOUT, prcS$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prcS
     * }
     */
    public static void prcS(MemorySegment struct, int fieldValue) {
        struct.set(prcS$LAYOUT, prcS$OFFSET, fieldValue);
    }

    private static final OfInt layE$LAYOUT = (OfInt)$LAYOUT.select(groupElement("layE"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layE
     * }
     */
    public static final OfInt layE$layout() {
        return layE$LAYOUT;
    }

    private static final long layE$OFFSET = 84;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layE
     * }
     */
    public static final long layE$offset() {
        return layE$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layE
     * }
     */
    public static int layE(MemorySegment struct) {
        return struct.get(layE$LAYOUT, layE$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 layE
     * }
     */
    public static void layE(MemorySegment struct, int fieldValue) {
        struct.set(layE$LAYOUT, layE$OFFSET, fieldValue);
    }

    private static final OfInt resE$LAYOUT = (OfInt)$LAYOUT.select(groupElement("resE"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resE
     * }
     */
    public static final OfInt resE$layout() {
        return resE$LAYOUT;
    }

    private static final long resE$OFFSET = 88;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resE
     * }
     */
    public static final long resE$offset() {
        return resE$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resE
     * }
     */
    public static int resE(MemorySegment struct) {
        return struct.get(resE$LAYOUT, resE$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 resE
     * }
     */
    public static void resE(MemorySegment struct, int fieldValue) {
        struct.set(resE$LAYOUT, resE$OFFSET, fieldValue);
    }

    private static final OfInt compE$LAYOUT = (OfInt)$LAYOUT.select(groupElement("compE"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compE
     * }
     */
    public static final OfInt compE$layout() {
        return compE$LAYOUT;
    }

    private static final long compE$OFFSET = 92;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compE
     * }
     */
    public static final long compE$offset() {
        return compE$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compE
     * }
     */
    public static int compE(MemorySegment struct) {
        return struct.get(compE$LAYOUT, compE$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 compE
     * }
     */
    public static void compE(MemorySegment struct, int fieldValue) {
        struct.set(compE$LAYOUT, compE$OFFSET, fieldValue);
    }

    private static final OfInt prcE$LAYOUT = (OfInt)$LAYOUT.select(groupElement("prcE"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prcE
     * }
     */
    public static final OfInt prcE$layout() {
        return prcE$LAYOUT;
    }

    private static final long prcE$OFFSET = 96;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prcE
     * }
     */
    public static final long prcE$offset() {
        return prcE$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prcE
     * }
     */
    public static int prcE(MemorySegment struct) {
        return struct.get(prcE$LAYOUT, prcE$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prcE
     * }
     */
    public static void prcE(MemorySegment struct, int fieldValue) {
        struct.set(prcE$LAYOUT, prcE$OFFSET, fieldValue);
    }

    private static final OfInt txS$LAYOUT = (OfInt)$LAYOUT.select(groupElement("txS"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 txS
     * }
     */
    public static final OfInt txS$layout() {
        return txS$LAYOUT;
    }

    private static final long txS$OFFSET = 100;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 txS
     * }
     */
    public static final long txS$offset() {
        return txS$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 txS
     * }
     */
    public static int txS(MemorySegment struct) {
        return struct.get(txS$LAYOUT, txS$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 txS
     * }
     */
    public static void txS(MemorySegment struct, int fieldValue) {
        struct.set(txS$LAYOUT, txS$OFFSET, fieldValue);
    }

    private static final OfInt txE$LAYOUT = (OfInt)$LAYOUT.select(groupElement("txE"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 txE
     * }
     */
    public static final OfInt txE$layout() {
        return txE$LAYOUT;
    }

    private static final long txE$OFFSET = 104;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 txE
     * }
     */
    public static final long txE$offset() {
        return txE$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 txE
     * }
     */
    public static int txE(MemorySegment struct) {
        return struct.get(txE$LAYOUT, txE$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 txE
     * }
     */
    public static void txE(MemorySegment struct, int fieldValue) {
        struct.set(txE$LAYOUT, txE$OFFSET, fieldValue);
    }

    private static final OfInt tyS$LAYOUT = (OfInt)$LAYOUT.select(groupElement("tyS"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tyS
     * }
     */
    public static final OfInt tyS$layout() {
        return tyS$LAYOUT;
    }

    private static final long tyS$OFFSET = 108;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tyS
     * }
     */
    public static final long tyS$offset() {
        return tyS$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tyS
     * }
     */
    public static int tyS(MemorySegment struct) {
        return struct.get(tyS$LAYOUT, tyS$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tyS
     * }
     */
    public static void tyS(MemorySegment struct, int fieldValue) {
        struct.set(tyS$LAYOUT, tyS$OFFSET, fieldValue);
    }

    private static final OfInt tyE$LAYOUT = (OfInt)$LAYOUT.select(groupElement("tyE"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tyE
     * }
     */
    public static final OfInt tyE$layout() {
        return tyE$LAYOUT;
    }

    private static final long tyE$OFFSET = 112;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tyE
     * }
     */
    public static final long tyE$offset() {
        return tyE$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tyE
     * }
     */
    public static int tyE(MemorySegment struct) {
        return struct.get(tyE$LAYOUT, tyE$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tyE
     * }
     */
    public static void tyE(MemorySegment struct, int fieldValue) {
        struct.set(tyE$LAYOUT, tyE$OFFSET, fieldValue);
    }

    private static final OfInt dx$LAYOUT = (OfInt)$LAYOUT.select(groupElement("dx"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 dx
     * }
     */
    public static final OfInt dx$layout() {
        return dx$LAYOUT;
    }

    private static final long dx$OFFSET = 116;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 dx
     * }
     */
    public static final long dx$offset() {
        return dx$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 dx
     * }
     */
    public static int dx(MemorySegment struct) {
        return struct.get(dx$LAYOUT, dx$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 dx
     * }
     */
    public static void dx(MemorySegment struct, int fieldValue) {
        struct.set(dx$LAYOUT, dx$OFFSET, fieldValue);
    }

    private static final OfInt dy$LAYOUT = (OfInt)$LAYOUT.select(groupElement("dy"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 dy
     * }
     */
    public static final OfInt dy$layout() {
        return dy$LAYOUT;
    }

    private static final long dy$OFFSET = 120;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 dy
     * }
     */
    public static final long dy$offset() {
        return dy$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 dy
     * }
     */
    public static int dy(MemorySegment struct) {
        return struct.get(dy$LAYOUT, dy$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 dy
     * }
     */
    public static void dy(MemorySegment struct, int fieldValue) {
        struct.set(dy$LAYOUT, dy$OFFSET, fieldValue);
    }

    private static final OfInt lay_t$LAYOUT = (OfInt)$LAYOUT.select(groupElement("lay_t"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 lay_t
     * }
     */
    public static final OfInt lay_t$layout() {
        return lay_t$LAYOUT;
    }

    private static final long lay_t$OFFSET = 124;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 lay_t
     * }
     */
    public static final long lay_t$offset() {
        return lay_t$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 lay_t
     * }
     */
    public static int lay_t(MemorySegment struct) {
        return struct.get(lay_t$LAYOUT, lay_t$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 lay_t
     * }
     */
    public static void lay_t(MemorySegment struct, int fieldValue) {
        struct.set(lay_t$LAYOUT, lay_t$OFFSET, fieldValue);
    }

    private static final OfInt res_t$LAYOUT = (OfInt)$LAYOUT.select(groupElement("res_t"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 res_t
     * }
     */
    public static final OfInt res_t$layout() {
        return res_t$LAYOUT;
    }

    private static final long res_t$OFFSET = 128;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 res_t
     * }
     */
    public static final long res_t$offset() {
        return res_t$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 res_t
     * }
     */
    public static int res_t(MemorySegment struct) {
        return struct.get(res_t$LAYOUT, res_t$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 res_t
     * }
     */
    public static void res_t(MemorySegment struct, int fieldValue) {
        struct.set(res_t$LAYOUT, res_t$OFFSET, fieldValue);
    }

    private static final OfInt comp_t$LAYOUT = (OfInt)$LAYOUT.select(groupElement("comp_t"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 comp_t
     * }
     */
    public static final OfInt comp_t$layout() {
        return comp_t$LAYOUT;
    }

    private static final long comp_t$OFFSET = 132;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 comp_t
     * }
     */
    public static final long comp_t$offset() {
        return comp_t$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 comp_t
     * }
     */
    public static int comp_t(MemorySegment struct) {
        return struct.get(comp_t$LAYOUT, comp_t$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 comp_t
     * }
     */
    public static void comp_t(MemorySegment struct, int fieldValue) {
        struct.set(comp_t$LAYOUT, comp_t$OFFSET, fieldValue);
    }

    private static final OfInt prc_t$LAYOUT = (OfInt)$LAYOUT.select(groupElement("prc_t"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prc_t
     * }
     */
    public static final OfInt prc_t$layout() {
        return prc_t$LAYOUT;
    }

    private static final long prc_t$OFFSET = 136;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prc_t
     * }
     */
    public static final long prc_t$offset() {
        return prc_t$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prc_t
     * }
     */
    public static int prc_t(MemorySegment struct) {
        return struct.get(prc_t$LAYOUT, prc_t$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 prc_t
     * }
     */
    public static void prc_t(MemorySegment struct, int fieldValue) {
        struct.set(prc_t$LAYOUT, prc_t$OFFSET, fieldValue);
    }

    private static final OfInt tx0_t$LAYOUT = (OfInt)$LAYOUT.select(groupElement("tx0_t"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tx0_t
     * }
     */
    public static final OfInt tx0_t$layout() {
        return tx0_t$LAYOUT;
    }

    private static final long tx0_t$OFFSET = 140;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tx0_t
     * }
     */
    public static final long tx0_t$offset() {
        return tx0_t$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tx0_t
     * }
     */
    public static int tx0_t(MemorySegment struct) {
        return struct.get(tx0_t$LAYOUT, tx0_t$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 tx0_t
     * }
     */
    public static void tx0_t(MemorySegment struct, int fieldValue) {
        struct.set(tx0_t$LAYOUT, tx0_t$OFFSET, fieldValue);
    }

    private static final OfInt ty0_t$LAYOUT = (OfInt)$LAYOUT.select(groupElement("ty0_t"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * OPJ_UINT32 ty0_t
     * }
     */
    public static final OfInt ty0_t$layout() {
        return ty0_t$LAYOUT;
    }

    private static final long ty0_t$OFFSET = 144;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * OPJ_UINT32 ty0_t
     * }
     */
    public static final long ty0_t$offset() {
        return ty0_t$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 ty0_t
     * }
     */
    public static int ty0_t(MemorySegment struct) {
        return struct.get(ty0_t$LAYOUT, ty0_t$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * OPJ_UINT32 ty0_t
     * }
     */
    public static void ty0_t(MemorySegment struct, int fieldValue) {
        struct.set(ty0_t$LAYOUT, ty0_t$OFFSET, fieldValue);
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this struct
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}

